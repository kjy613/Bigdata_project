# -*- coding: utf-8 -*-
"""빅데이터 프로젝트.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fq6LRjbqXxBv-81E_Vda5lbfzqPveOoQ
"""

# 단계 1: 폰트 설치
import matplotlib.pyplot as plt
import matplotlib.font_manager as fm

!apt-get -qq -y install fonts-nanum > /dev/null



fe = fm.FontEntry(
    fname=r'/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf', # ttf 파일이 저장되어 있는 경로
    name='NanumGothic')                        # 이 폰트의 원하는 이름 설정
fm.fontManager.ttflist.insert(0, fe)              # Matplotlib에 폰트 추가
plt.rcParams.update({'font.size': 18, 'font.family': 'NanumGothic'}) # 폰트 설

# 단계 2: 런타임 재시작
import os
os.kill(os.getpid(), 9)

# 단계 3: 한글 폰트 설정
import matplotlib.pyplot as plt
import matplotlib as mpl
import matplotlib.font_manager as fm

# 마이너스 표시 문제
mpl.rcParams['axes.unicode_minus'] = False

# 한글 폰트 설정
fe = fm.FontEntry(
    fname=r'/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf', # ttf 파일이 저장되어 있는 경로
    name='NanumGothic')                        # 이 폰트의 원하는 이름 설정
fm.fontManager.ttflist.insert(0, fe)              # Matplotlib에 폰트 추가
plt.rcParams.update({'font.size': 18, 'font.family': 'NanumGothic'}) # 폰트 설

#사용X


import pandas as pd

# 데이터 불러오기 (예: CSV 파일을 불러오는 경우)
df = pd.read_csv('녹지공간연계_리파인.csv')

# 예시 데이터 (이미 DataFrame으로 로드된 경우)
data = {
    "SIDO_NM": ["서울특별시"] * 33, #시도 이름
    "MTRNT_CLSF": ["전세", "월세", "월세", "월세", "전세", "월세", "전세", "월세", "전세", "월세",
                   "전세", "전세", "전세", "월세", "전세", "월세", "전세", "월세", "월세", "전세",
                   "전세", "전세", "월세", "전세", "전세", "전세", "월세", "전세", "월세", "전세",
                   "월세", "월세", "전세"], # 임대 형태
    "SMOEU": [21.88, 13.56, 13.56, 57.99, 73.5, 72.78, 83.62, 57.67, 84.69, 42.84, 147.26, 50.28,
              50.28, 50.28, 50.14, 59.02, 40.85, 62.28, 62.28, 62.28, 62.28, 62.28, 79.36, 36.46,
              32.62, 54.45, 27.7, 27.7, 27.22, 39.91, 39.91, 39.91, 40.0], #(평당)임대료
     "CNTRCT_DE": ["20240120", "20240128", "20240309", "20240328", "20240307", "20240317", "20240223",
                  "20240630", "20240214", "20240619", "20240418", "20240514", "20240619", "20240626",
                  "20240627", "20240107", "20240327", "20240110", "20240110", "20240204", "20240403",
                  "20240425", "20240126", "20240412", "20240513", "20240107", "20240307", "20240119",
                  "20240318", "20240328", "20240325", "20240509", "20240601"], #계약 날짜
    "MNTH_RENTCG": [16000, 1000, 2500, 20000, 46000, 5000, 45000, 30000, 50000, 13000, 60000, 15000,
                    15000, 3000, 40000, 2000, 24000, 12500, 12500, 30000, 25000, 27000, 20000, 39000,
                    17600, 5000, 20000, 22000, 20000, 27000, 2000, 22000, 17500], #월세 금액
    "FLR": [3, 2, 4, 5, 4, 4, 3, 5, 5, 1, 6, -1, -1, 2, 4, 1, 2, -1, -1, 2, 3, 2, 3, 3, 3, 4,
            3, 3, 3, 4, 3, 4, 4], #층수
    "BULD_YR": [2013, 2013, 2013, 2017, 2000, 2002, 2002, 2015, 2001, 1996, 1997, 1989, 1989, 1989,
                2020, 1995, 2013, 1993, 1993, 1993, 1993, 1993, 2002, 2001, 2012, 1996, 2017, 2017,
                2017, 1993, 1993, 1993, 1993], #건축 연도
 "NGHB_PRKGRNLND_SPCE": ["구룡산", "양재시민의 숲", "양재시민의 숲", "삼성산", "서울숲", "양재시민의 숲", "삼성산",
                            "서울숲", "서울숲", "한남대공원", "한남대공원", "한남대공원", "한남대공원",
                            "구룡산", "양재시민의 숲", "양재시민의 숲", "삼성산", "서울숲", "양재시민의 숲",
                            "삼성산", "서울숲", "구룡산", "양재시민의 숲", "삼성산", "서울숲", "양재시민의 숲",
                            "서울숲", "양재시민의 숲", "구룡산", "삼성산", "서울숲", "구룡산", "양재시민의 숲"],  # 인근 공원/녹지공간 이름
    "NGHB_PRKGRNLND_SPCE_DSTNC": [1.04803, 1.04803, 1.04803, 0.9762, 0.89394, 0.86038, 0.84938, 0.84821,
                                  0.8431, 0.86875, 0.89655, 0.89772, 0.89772, 0.89928, 0.89395, 0.91254,
                                  0.97119, 0.97883, 0.97883, 0.97883, 0.97883, 0.97883, 0.96575,
                                  1.0247, 1.06093, 1.02193, 1.02803, 1.02803, 1.02803, 1.01143,
                                  1.01143, 1.01143, 1.0] #인근 공원/녹지 공간과의 거리
}

df = pd.DataFrame(data)

#DataFrame 생성
df_cleaned = df[["SIDO_NM", "MTRNT_CLSF", "SMOEU", "CNTRCT_DE", "MNTH_RENTCG", "FLR", "BULD_YR",
                 "NGHB_PRKGRNLND_SPCE", "NGHB_PRKGRNLND_SPCE_DSTNC"]]
print(df_cleaned)
import pandas as pd

# CSV 파일 불러오기
file_path = "/mnt/data/녹지공원연계정보.csv"

import pandas as pd

# 데이터 정의
data = """
2406076236|서울특별시|서초구||반포동|10|126.99645|37.50389|월세|59.81|20240626|9000|220|10|2000|계성초등학교|126.99675|37.50463|0.08614
2406076237|서울특별시|서초구||반포동|10|126.99645|37.50389|전세|56.16|20240513|84000|0|12|2000|계성초등학교|126.99675|37.50463|0.08614
2406076238|서울특별시|서초구||반포동|10|126.99645|37.50389|전세|84.82|20240419|95000|0|2|2000|계성초등학교|126.99675|37.50463|0.08614
2406076239|서울특별시|서초구||반포동|10|126.99645|37.50389|전세|59.91|20240126|80000|0|11|2000|계성초등학교|126.99675|37.50463|0.08614
2406076240|서울특별시|서초구||반포동|10|126.99645|37.50389|월세|84.82|20240125|60000|200|4|2000|계성초등학교|126.99675|37.50463|0.08614
2406076241|서울특별시|서초구||반포동|10|126.99645|37.50389|월세|84.82|20240106|90000|40|5|2000|계성초등학교|126.99675|37.50463|0.08614
2406076242|서울특별시|서초구||반포동|100-1|126.99655|37.49603|월세|196.98|20240430|0|775|2|2002|서울잠원초등학교|126.99809|37.50156|0.62801
2406076243|서울특별시|서초구||반포동|100-3|126.99661|37.49583|월세|141.69|20240131|20000|560|3|2004|서울서래초등학교|126.98943|37.496|0.63473
2406076244|서울특별시|서초구||반포동|101-6|126.99724|37.49512|전세|65.78|20240118|45000|0|-1|1992|서울서래초등학교|126.98943|37.496|0.69691
2406076245|서울특별시|서초구||반포동|101-7|126.99725|37.4953|전세|207.27|20240220|150000|0|1|1992|서울서래초등학교|126.98943|37.496|0.69579
2406076246|서울특별시|서초구||반포동|102-3|126.9974|37.49646|월세|105.64|20240308|0|880|4|2018|서울잠원초등학교|126.99809|37.50156|0.56951
2406076247|서울특별시|서초구||반포동|103-4|126.99671|37.49633|월세|183.34|20240624|100000|150|1|1997|서울잠원초등학교|126.99809|37.50156|0.59326
2406076248|서울특별시|서초구||반포동|105-10|126.99754|37.49799|월세|84.84|20240120|20000|140|3|2001|서울잠원초등학교|126.99809|37.50156|0.3986
2406076249|서울특별시|서초구||반포동|105-11|126.99726|37.49801|전세|59.09|20240320|37800|0|4|2003|서울잠원초등학교|126.99809|37.50156|0.39994
2406076250|서울특별시|서초구||반포동|105-11|126.99726|37.49801|전세|59.09|20240221|47000|0|2|2003|서울잠원초등학교|126.99809|37.50156|0.39994
2406076251|서울특별시|서초구||반포동|105-13|126.99739|37.49821|전세|79.75|20240528|62240|0|3|2002|서울잠원초등학교|126.99809|37.50156|0.37711
2406076252|서울특별시|서초구||반포동|105-13|126.99739|37.49821|전세|79.75|20240528|62400|0|3|2002|서울잠원초등학교|126.99809|37.50156|0.37711
2406076253|서울특별시|서초구||반포동|105-14|126.99718|37.49824|전세|104.72|20240517|69300|0|4|2003|서울잠원초등학교|126.99809|37.50156|0.37726
2406076254|서울특별시|서초구||반포동|105-20|126.99738|37.49801|월세|59.64|20240622|39000|25|3|2002|서울잠원초등학교|126.99809|37.50156|0.39897
2406076255|서울특별시|서초구||반포동|105-20|126.99738|37.49801|전세|59.64|20240116|45000|0|4|2002|서울잠원초등학교|126.99809|37.50156|0.39897
2406076256|서울특별시|서초구||반포동|106-4|126.99748|37.49912|전세|90.67|20240612|60000|0|2|2003|서울잠원초등학교|126.99809|37.50156|0.27574
2406076257|서울특별시|서초구||반포동|106-4|126.99748|37.49912|월세|49.1|20240219|25000|30|5|2003|서울잠원초등학교|126.99809|37.50156|0.27574
2406076258|서울특별시|서초구||반포동|106-4|126.99748|37.49912|전세|64.63|20240108|40000|0|4|2003|서울잠원초등학교|126.99809|37.50156|0.27574
2406076259|서울특별시|서초구||반포동|107-10|126.99588|37.49848|전세|53.79|20240610|28476|0|4|2003|서울잠원초등학교|126.99809|37.50156|0.39321
2406076260|서울특별시|서초구||반포동|107-10|126.99588|37.49848|전세|81.54|20240610|38588|0|1|2003|서울잠원초등학교|126.99809|37.50156|0.39321
2406076261|서울특별시|서초구||반포동|107-10|126.99588|37.49848|전세|53.79|20240610|34000|0|4|2003|서울잠원초등학교|126.99809|37.50156|0.39321
2406076262|서울특별시|서초구||반포동|107-11|126.99602|37.49847|월세|30.24|20240229|1000|73|3|2003|서울잠원초등학교|126.99809|37.50156|0.38815
2406076263|서울특별시|서초구||반포동|107-19|126.9963|37.49849|전세|91.5|20240518|10000|0|2|2004|서울잠원초등학교|126.99809|37.50156|0.37559
2406076264|서울특별시|서초구||반포동|107-23|126.99672|37.49866|전세|57.55|20240406|38000|0|2|2002|서울잠원초등학교|126.99809|37.50156|0.34347
2406076265|서울특별시|서초구||반포동|107-38|126.99626|37.49815|월세|84.98|20240119|10000|170|2|2002|서울잠원초등학교|126.99809|37.50156|0.41133
2406076266|서울특별시|서초구||반포동|107-49|126.99567|37.49782|월세|84.72|20240318|5000|180|3|1997|서울잠원초등학교|126.99809|37.50156|0.46665
2406076267|서울특별시|서초구||반포동|107-49|126.99567|37.49782|월세|84.72|20240109|30000|80|1|1997|서울잠원초등학교|126.99809|37.50156|0.46665
2406076268|서울특별시|서초구||반포동|107-52|126.99567|37.49742|전세|148.83|20240115|130000|0|3|2002|서울잠원초등학교|126.99809|37.50156|0.50698
2406076269|서울특별시|서초구||반포동|107-56|126.99579|37.49696|월세|79.29|20240524|40000|20|2|1991|서울잠원초등학교|126.99809|37.50156|0.54939
2406076270|서울특별시|서초구||반포동|107-60|126.99599|37.4974|월세|46.26|20240518|28600|5|1|2002|서울잠원초등학교|126.99809|37.50156|0.4971
2406076271|서울특별시|서초구||반포동|107-60|126.99599|37.4974|월세|46.26|20240518|28600|6|1|2002|서울잠원초등학교|126.99809|37.50156|0.4971
2406076272|서울특별시|서초구||반포동|107-62|126.99596|37.49768|전세|68.28|20240504|52400|0|5|2004|서울잠원초등학교|126.99809|37.50156|0.4701
2406076273|서울특별시|서초구||반포동|107-62|126.99596|37.49768|전세|68.28|20240416|53400|0|5|2004|서울잠원초등학교|126.99809|37.50156|0.4701
2406076274|서울특별시|서초구||반포동|107-83|126.99676|37.49747|월세|154.24|20240116|80000|200|2|1996|서울잠원초등학교|126.99809|37.50156|0.46829
2406076275|서울특별시|서초구||반포동|108-1|126.99459|37.49682|전세|126.33|20240628|80000|0|2|1993|서울서래초등학교|126.98943|37.496|0.46512
2406076276|서울특별시|서초구||반포동|108-5|126.99499|37.49681|전세|121.72|20240411|80000|0|1|2013|서울서래초등학교|126.98943|37.496|0.5
2406076277|서울특별시|서초구||반포동|114-1|126.99256|37.49878|월세|49.76|20240618|60000|104|2|2022|서울서래초등학교|126.98943|37.496|0.41408
2406076278|서울특별시|서초구||반포동|114-1|126.99256|37.49878|월세|49.78|20240616|50000|140|5|2022|서울서래초등학교|126.98943|37.496|0.41408
2406076279|서울특별시|서초구||반포동|114-1|126.99256|37.49878|전세|49.78|20240130|73000|0|3|2022|서울서래초등학교|126.98943|37.496|0.41408
2406076280|서울특별시|서초구||반포동|114-1|126.99256|37.49878|전세|49.78|20240127|65000|0|3|2022|서울서래초등학교|126.98943|37.496|0.41408
2406076281|서울특별시|서초구||반포동|114-1|126.99256|37.49878|전세|49.76|20240118|75000|0|5|2022|서울서래초등학교|126.98943|37.496|0.41408
2406076282|서울특별시|서초구||반포동|114-1|126.99256|37.49878|전세|49.76|20240113|70000|0|2|2022|서울서래초등학교|126.98943|37.496|0.41408
2406076283|서울특별시|서초구||반포동|114-1|126.99256|37.49878|월세|49.93|20240112|35000|135|3|2022|서울서래초등학교|126.98943|37.496|0.41408
2406076284|서울특별시|서초구||반포동|114-1|126.99256|37.49878|월세|49.78|20240110|30000|175|6|2022|서울서래초등학교|126.98943|37.496|0.41408
"""

# 데이터 문자열을 리스트로 변환
rows = [row.split('|') for row in data.strip().split('\n')]

# 데이터프레임 컬럼 정의
columns = [
    "ID", "시도", "구군", "읍면동", "리", "번지", "경도", "위도", "계약구분", "전용면적",
    "계약일", "보증금", "월세", "층", "건축년도", "초등학교", "초등학교 경도", "초등학교 위도", "초등학교 거리"
]

# 데이터프레임 생성
df = pd.DataFrame(rows, columns=columns)

# 데이터 타입 변환 (숫자 데이터는 float 또는 int로)
convert_columns = ["경도", "위도", "전용면적", "보증금", "월세", "층", "건축년도", "초등학교 경도", "초등학교 위도", "초등학교 거리"]
for col in convert_columns:
    df[col] = pd.to_numeric(df[col], errors='coerce')

# 데이터프레임 출력
print(df.head())

# 파일로 저장 (옵션)
df.to_csv("초등학교재정리본.csv", index=False, encoding="utf-8-sig")

import pandas as pd
import seaborn as sns

df= pd.read_csv("/content/총정리본.csv")
rdf = df.drop(['ID','시도','구군','리', '녹지공간/공원 거리', '대중교통 랜드마크', '교육시설', '대형유통시설', '대형의료시설', '초등학교'], axis=1)

dfq_mth = rdf.query('계약구분=="월세"')
dfq_mth.to_csv("/content/월세정리본.csv", index=False, encoding="utf-8-sig")

dfq_cht = rdf.query('계약구분=="전세"')
dfq_cht.to_csv("/content/전세정리본.csv", index=False, encoding="utf-8-sig")

import pandas as pd
import seaborn as sns

#전세는 보증금 60000이상 시 비싼 것으로 간주
df= pd.read_csv("/content/전세비쌈정리본.csv")
rdf = df.drop(['계약구분'], axis=1)
rdf.to_csv("/content/최종전세정리본.csv", index=False, encoding="utf-8-sig")

#월세는 보증금 30000이상 혹은 월세 400이상 시 비싼 것으로 간주
df= pd.read_csv("/content/월세비쌈정리본.csv")
rdf = df.drop(['계약구분'], axis=1)
rdf.to_csv("/content/최종월세정리본.csv", index=False, encoding="utf-8-sig")

import pandas as pd
import seaborn as sns

df= pd.read_csv("/content/최종전세정리본.csv")
rdf = df.drop(['번지', '계약일', '건축년도', '보증금', '월세'], axis=1)
rdf.to_csv("/content/최최종전세정리본.csv", index=False, encoding="utf-8-sig")

df= pd.read_csv("/content/최종월세정리본.csv")
rdf = df.drop(['번지', '계약일' ,'건축년도', '보증금', '월세'], axis=1)
rdf.to_csv("/content/최최종월세정리본.csv", index=False, encoding="utf-8-sig")

# Commented out IPython magic to ensure Python compatibility.
import seaborn as sns
# %matplotlib inline
import pandas as pd
from xgboost import XGBClassifier
from sklearn.preprocessing import LabelEncoder
import plotly.express as px


df = pd.read_csv('/content/최최종전세정리본.csv')

X = df.iloc[:,0:7]

y = df.iloc[:,7]
y_labels = LabelEncoder().fit_transform(y)

xgb_cls = XGBClassifier(n_estimators=1000)

xgb_cls.fit(X, y_labels)

feature_series = pd.Series(data=xgb_cls.feature_importances_, index=X.columns )

sns.barplot(x= feature_series, y=feature_series.index)

# plotly로 그래프 생성
fig = px.bar(feature_series, x=feature_series.values, y=feature_series.index, orientation='h', title="반포구 전세 집값의 주요 요소")
fig.write_html("/content/전세_feature_importance.html")

# Commented out IPython magic to ensure Python compatibility.
import seaborn as sns
# %matplotlib inline
import pandas as pd
from xgboost import XGBClassifier
from sklearn.preprocessing import LabelEncoder
import plotly.express as px


df = pd.read_csv('/content/최최종월세정리본.csv')

X = df.iloc[:,0:7]

y = df.iloc[:,7]
y_labels = LabelEncoder().fit_transform(y)

xgb_cls = XGBClassifier(n_estimators=1000)

xgb_cls.fit(X, y_labels)

feature_series = pd.Series(data=xgb_cls.feature_importances_, index=X.columns )

sns.barplot(x= feature_series, y=feature_series.index)

# plotly로 그래프 생성
fig = px.bar(feature_series, x=feature_series.values, y=feature_series.index, orientation='h', title="반포구 월세 집값의 주요 요소")
fig.write_html("/content/월세_feature_importance.html")

import pandas as pd
import seaborn as sns
import plotly.express as px
import matplotlib.pyplot as plt


df = pd.read_csv('/content/최종전세정리본.csv')
df1 = df.drop(['번지', '계약일', '건축년도'], axis=1)
#cdf= df.countplot(data=df, x='보증금', hue='전용면적')
#print(cdf)
#fig = px.bar(df, x='전용면적', y='월세', color='전용면적', color_continuous_scale=px.colors.diverging.Spectral)
#fig.update_layout(width=600)

sns.barplot(data=df, x='전용면적', y='보증금', hue='전용면적')

# plotly로 그래프 생성
fig = px.bar(df, x='전용면적', y='보증금', orientation='h', title="전세와 전용면적의 연관성")
fig.write_html("/content/전세_전용면적.html")

import pandas as pd
import seaborn as sns
import plotly.express as px
import matplotlib.pyplot as plt


df = pd.read_csv('/content/최종월세정리본.csv')
df1 = df.drop(['번지', '계약일', '건축년도'], axis=1)


sns.barplot(data=df, x='전용면적', y='월세', hue='전용면적')

# plotly로 그래프 생성
fig = px.bar(df, x='전용면적', y='월세', orientation='h', title="월세와 전용면적의 연관성")
fig.write_html("/content/월세_전용면적.html")